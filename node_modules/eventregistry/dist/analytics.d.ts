import { EventRegistry } from "./eventRegistry";
export declare class Analytics {
    private er;
    /**
     * @param eventRegistry: instance of EventRegistry class
     */
    constructor(er: EventRegistry);
    /**
     * Identify the list of entities and nonentities mentioned in the text
     * @param text input text to annotate
     * @param lang language of the provided document (can be an ISO2 or ISO3 code). If None is provided, the language will be automatically detected
     */
    annotate(text: string, lang?: string[]): Promise<any>;
    /**
     * Determine the set of up to 5 categories the text is about. Currently, only English text can be categorized!
     * @param text input text to categorize
     */
    categorize(text: string): Promise<any>;
    /**
     * Determine the sentiment of the provided text
     * @param text input text to categorize
     */
    sentiment(text: string): Promise<any>;
    semanticSimilarity(text1: string, text2: string, distanceMeasure?: "cosine" | "jaccard"): Promise<any>;
    /**
     * Determine the language of the given text
     * @param text input text to analyse
     */
    detectLanguage(text: string): Promise<any>;
    /**
     * Extract all available information about an article available at url `url`.
     * Returned information will include article title, body, authors, links in the articles,...
     * @param url article url that'll be used for extraction
     */
    extractArticleInfo(url: string): Promise<any>;
}
